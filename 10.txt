using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading;

namespace StudentDB
{
    class Student_Course
    {
        string fname;
        string lname;
        string email;
        string coursename;
        int courseID = 0;
        bool exit = true;
        int id = 99;
        int[,] sc = new int[100, 2];
        int row = 0;
        int columns = 0;
        int counter = 0;

        public List<Student> s1 = new List<Student>();
        public List<Courses> c1 = new List<Courses>();

        public void _addinfo()
        {
            while (exit == true)
            {
                AddInfromation();
            }

        }

        public void showallinfo()
        {
            Console.WriteLine();
            AllInfo();

        }

        void GetStudentInformation()
        {
            Console.WriteLine();
            Console.WriteLine("Enter following details:");

            Console.WriteLine();
            Console.Write("First Name: ");
            fname = Console.ReadLine();
            Console.Write("Last Name: ");
            lname = Console.ReadLine();
            Console.Write("Email ID: ");
            email = Console.ReadLine();
            id = incrementId();
            Console.WriteLine("Student ID: " + id);

            s1.Add(new Student(id, fname, lname, email));

        }
        int incrementId()
        {

            id += 1;
            return id;
        }
        int incrementCourseId()
        {

            courseID += 1;
            return courseID;
        }

        void GetCourseInformation()
        {
            Console.WriteLine();
            Console.WriteLine("Enter following Infromation for course.");
            Console.Write("Course Name: ");
            coursename = Console.ReadLine();
            courseID = incrementCourseId();
            Console.WriteLine("Course ID: " + courseID);

            c1.Add(new Courses(courseID, coursename));
        }

        void AddInfromation()
        {
            int i;
            Console.WriteLine();
            Console.Write("1. Enter student Information   2. Enter course Infromation    3. Add Student to course  4. Exit  : ");
            i = Convert.ToInt32(Console.ReadLine());

            switch (i)
            {
                case 1:
                    GetStudentInformation();
                    break;
                case 2:
                    GetCourseInformation();
                    break;
                case 3:
                    Console.WriteLine();
                    Add_StudentToCourse();
                    break;
                case 4:
                    exit = false;
                    break;

                default:
                    Console.WriteLine("Opps! Invalid option, Try again");
                    break;
            }
        }

        void AllInfo()
        {
            foreach (var item in s1)
            {
                Console.WriteLine($"Student ID: {item.getStudentID()}   First Name: {item.getfirstname()}  Last Name: {item.getlastname()}   Email id: {item.getEmailid()}");

            }
            Console.WriteLine();
            foreach (var item in c1)
            {
                Console.WriteLine($"Course ID: {item.getcourseID()}   Course Name: {item.getCourseName()}");

            }

        }

        bool stracker = false;

        bool Ctracker = false;

        int course_duplicate_counter = 0;

        bool notifier = true;
        public void Add_StudentToCourse()
        {
            int sid;
            int cid;


            Console.WriteLine("Enroll yourself for available courses.");
            foreach (var item in c1)
            {
                Console.WriteLine($"Course ID: {item.getcourseID()}   Course Name: {item.getCourseName()}");

            }
            if ((s1.Count == 0) || (c1.Count == 0))
            {
                Console.WriteLine("Opps, You can't enroll for courses.");
            }


            else
            {

                Console.WriteLine();
                Console.Write("Enter your student ID to enroll for above courses: ");
                sid = Convert.ToInt32(Console.ReadLine());
                stracker = false;
                foreach (var item in s1)
                {
                    if (item.getStudentID() == sid)
                    {
                        string fullname;

                        Console.WriteLine("Welcome " + item.getfirstname() + " " + item.getlastname());
                        fullname = (item.getfirstname() + " " + item.getlastname());
                        stracker = true;

                        Console.WriteLine();
                        Console.Write("Now enter Course ID to enroll: ");
                        cid = Convert.ToInt32(Console.ReadLine());


                        foreach (var i in c1)
                        {

                            if (i.getcourseID() == cid)
                            {
                                Ctracker = true;
                                if (counter == 0)
                                {
                                    Ctracker = true;
                                    sc[row, columns] = sid;
                                    columns++;
                                    sc[row, columns] = cid;
                                    columns = 0; row++; //counter++;
                                }
                                if (counter > 0)
                                {
                                    bool flag = true;

                                    for (int K = 0; K < counter; K++)
                                    {

                                        if ((sid == sc[K, 0]) && (cid == sc[K, 1]))
                                        {
                                            Console.WriteLine("You have already enrolled for this course!");
                                            flag = false; Ctracker = false;
                                            course_duplicate_counter++; notifier = false;
                                            break;
                                        }
                                    }
                                    if (flag == true)
                                    {
                                        //flag = true; 
                                        Ctracker = true;
                                        sc[row, columns] = sid;
                                        columns++;
                                        sc[row, columns] = cid;
                                        columns = 0; row++; //counter++;
                                    }

                                }
                            }

                        }
                        if (Ctracker == false)
                        {
                            Console.WriteLine("Opps,You have entered wrong Course ID, Try again!");

                            break;

                        }

                        foreach (var k in c1)
                        {

                            if ((item.getStudentID() == sid) && (k.getcourseID() == cid))
                            {

                                Console.WriteLine($"{fullname} has successfully enrolled for courseID {cid}  ");
                            }
                        }

                    }

                }
                if (stracker == false)
                {
                    Console.WriteLine("Opps,You have entered Invalid Student ID, Try again!");

                }

            }
            counter++;


        }

        public void show_student_course()
        {
            if (notifier == false)
            {
                for (int i = 0; i < (counter - course_duplicate_counter); i++)
                {
                    int j = 0;
                    Console.Write($"Student ID: {sc[i, j]}  ");
                    j++;
                    Console.WriteLine($"Course ID: {sc[i, j]}");
                }
            }
            else
            {

                for (int i = 0; i < counter; i++)
                {

                    int j = 0;
                    Console.Write($"Student ID: {sc[i, j]}  ");
                    j++;
                    Console.WriteLine($"Course ID: {sc[i, j]}");

                }
            }

        }
    }
}

